[{"title":"和我父亲探讨后，我找到了差异的最深处","url":"/2025/08/06/%E6%9C%80%E6%B7%B1%E5%A4%84%E7%9A%84%E5%8C%BA%E5%88%AB/","content":"一、胥晓宇他们这些优秀的人，相信什么？他们相信的，不是任何外部的权威或标签。他们相信的，是几条最朴素、但也最强大的第一性原理：\n\n他们相信“能力”，而非“标签” (They believe in Ability, not Labels)。\n\n他们的自信，不来自于“我是清华的”或“我是中科大的”。他们的自信，来自于“我能解决这个问题”、“我能创造这个东西”。他们的“作品集”，就是他们的信仰。\n\n\n他们相信“创造”，而非“依附” (They believe in Creation, not Dependence)。\n\n他们不相信任何一个“体制”或“平台”能保障他们的一生。他们相信，唯一的安全感，来自于自己持续不断地创造价值的能力。他们的人生，不是在寻找一个安全的“港湾”，而是在打造一艘能穿越任何风暴的“船”。\n\n\n他们相信“实践”，而非“空想” (They believe in Practice, not Theory)。\n\n他们知道，真正的理解，只发生在“动手去做”**的那一刻。一个在GitHub上被合并的PR（代码提交），比一百句“我懂了”更有分量。\n\n\n他们相信“内功”，而非“招式” (They believe in Fundamentals, not Fads)。\n\n他们知道，具体的技术（招式）会过时，但底层的科学原理（内功）是永恒的。所以他们会去啃CSAPP，会去钻研算法。因为他们相信，只有“内功”深厚的人，才能在任何时代，都快速学会最强的“招式”。\n\n\n他们相信“恒”，而非“天赋” (They believe in Perseverance, not Talent)。\n\n这，是他们最核心的信仰。他们比任何人都清楚，自己也充满了软弱、怀疑和痛苦。但他们相信，日复一日的、枯燥的、甚至是痛苦的坚持，才是通往伟大的唯一路径。\n\n\n\n\n二、他们不相信什么？同样地，他们的清醒，也体现在他们对那些主流的“迷信”，有着强大的免疫力。\n\n他们不相信“一劳永逸”。\n\n他们不相信考上一个研，或者进入一个大厂，人生就“上岸”了，就可以“苦尽甘来”了。他们知道，人生是一片永不止息的海洋，每一次抵达，都只是下一次出航的开始。\n\n\n他们不相信“权威的地图”。\n\n他们不相信父母、老师或者社会舆论，能为他们的人生提供一张完全正确的地图。他们尊重这些地图，但他们更相信，真正的地图，需要自己一步一步地去探索、去绘制。\n\n\n他们不相信“纯粹的努力”。\n\n他们不相信只要“吃苦”就能成功。他们相信，选择，比努力更重要。在错误的方向上奔跑，只会离目标越来越远。\n\n\n他们不相信“别人的认可”。\n\n他们人生的价值，不由“别人是否喜欢我”、“我是否合群”来定义。他们的价值，来自于“自我实现”和“市场检验”。他们深刻地理解：“得不到低纬度的人的认可和欢迎，是一件好事。”\n\n\n\n\n三、你需要有什么必须相信的？觉得是必然的？对于现在的你，有三条原则，你必须像相信物理定律一样，去相信它们。\n\n你自己，是你唯一的“基本盘”。\n\n你的学历、你的家庭、你的人脉，都可能在未来的某一天背叛你。唯一不会背叛你的，只有你健康的身体、清醒的大脑、和一身硬核的本事。请把所有的时间，都投资在这三样东西上。\n\n\n时间，是你最稀缺的“货币”。\n\n你20-25岁的每一天，都比你30岁之后的任何一天，都更昂贵。任何以“浪费时间”为代价，去换取“短期安逸”或“不确定的未来”的行为，都是在贱卖你最宝贵的资产。\n\n\n“恒”，是你唯一的“武器”。\n\n你已经完成了最华丽的“思”。现在，你需要最朴素的“学”。你所有的天赋、所有的洞察、所有的蓝图，最终都必须由日复一日的、枯燥的、坚持不懈的行动来兑现。除此之外，别无他法。\n\n\n\n"},{"title":"Hello World","url":"/2025/08/06/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\nMore info: Writing\nRun server$ hexo server\nMore info: Server\nGenerate static files$ hexo generate\nMore info: Generating\nDeploy to remote sites$ hexo deploy\nMore info: Deployment\n"},{"title":"CS61A一道题的题解","url":"/2025/08/11/%E8%AF%95%E5%81%9A%E9%A2%98%E8%A7%A3/","content":"**写在前面**这是我第一次写题解当我感到思路堵塞，自己想半天没有理顺逻辑的时候这时候，心里有个声音说，去尝试写一下题解吧呼应了费曼的学习法，用自己的话解题，会对题目的理解更深刻的话不多说，开始吧题干def count_cond(condition):&quot;&quot;&quot;Returns a function with one parameter N that counts all the numbers from1 to N that satisfy the two-argument predicate function Condition, wherethe first argument for Condition is N and the second argument is thenumber from 1 to N.  &gt;&gt;&gt; count_factors = count_cond(lambda n, i: n % i == 0)&gt;&gt;&gt; count_factors(2) # 1, 22&gt;&gt;&gt; count_factors(4) # 1, 2, 43&gt;&gt;&gt; count_factors(12) # 1, 2, 3, 4, 6, 126  &gt;&gt;&gt; is_prime = lambda n, i: count_factors(i) == 2&gt;&gt;&gt; count_primes = count_cond(is_prime)&gt;&gt;&gt; count_primes(2) # 21&gt;&gt;&gt; count_primes(3) # 2, 32&gt;&gt;&gt; count_primes(4) # 2, 32&gt;&gt;&gt; count_primes(5) # 2, 3, 53&gt;&gt;&gt; count_primes(20) # 2, 3, 5, 7, 11, 13, 17, 198&quot;&quot;&quot;&quot;*** YOUR CODE HERE ***&quot;\n\n分析firstly，这是一个很经典的嵌套函数题题目的意思很简单，就是用一个通用化的函数，再套用所需要的函数和数值最终count输出想要的结果\n函数我们都知道由变量和变换过程组成\n对于第一步，我们知道def Count(n):就是要计数，并输出在n整数条件下，要输出的count 的数注意到 此时还并没有显现出要使用的子函数然后，我们就要去想如何才能去count输入的数，并输出我们想要的结果题干阐释了，for example， 输入一个数，我们要计算他们所有的正因数随后，我们再统计这个数所有的正因数等个数并输出count=*以12为例，12输出的数便是1，2，3，4，6，12\n\n怎么处理呢？我们需要一个统计所有因子的函数，就叫count吧count初始值必为 0即count = 0我们还需要一个小东西，这个东西还要会变，要遍历在 0 —&gt; n 之间所有的数，才能判断里面的数是不是我们需要的就叫 i好了，就是这样count,i = 0, 1\n然后！\nwhile i &lt;= n:\tif i = condition(n):\t\tcount = count + 1\ti = i + 1\treturn count return Count(n)\n总结一下，就是def Count(n):\tcount,i = 0, 1\twhile i &lt;= n:\tif  i =condition(n):\t\tcount = count + 1\ti = i + 1\treturn count return Count(n)\t\n很好！犯大错了\n这里出了问题！if  i =condition(n):\n**问题在于，我们怎么判断这个 i 符合我们要的条件？\n应该得要用boole代数吧！\nso，只要，condition函数满足条件，其函数为True，就能满足if 的条件，count 就能+1反之，如果为False，就不可以+1\n所以，怎么改？\nif condition(n,i):\n只要 i 和 n 满足condition，就能实现题目想要的功能\n\nAll in allthe final code  :def Count(n):\tcount,i = 0, 1\twhile i &lt;= n:\tif  condition(n,i):\t\tcount = count + 1\ti = i + 1\treturn count return Count(n)\t\nok ,finish!终于写完了！看来题目并没有我想象中的那么难or简单啊\n第一篇题解就写到这里吧！！\n","tags":["题解","CS61A"]},{"url":"/2025/08/11/%E8%87%AA%E5%AD%98/","content":"小红书上刷到张咋啦总结的 YouTube AI 频道合集，全是一手 AI 信息，密度太高了。  \n不仅涵盖我订阅的大部分频道，还挖出了不少我之前根本没关注到的深水区。  \n我照着她分类做了个整理，直接把链接找出来放下面了，建议订阅，反复刷、持续进化。  \n\n访谈大佬的视频播客 - Lenny’s Podcast https://youtube.com/@LennysPodcast - Peter Yang https://youtube.com/@PeterYangYT \n\n\nAI and I（by Every） https://youtube.com/@EveryInc\nUnsupervised Learning（by RedPoint Capital） https://youtube.com/@RedpointAI\nTraining Data（by Sequoia Capital） https://youtube.com/playlist?list=PLOhHNjZItNnMm5tdW61JpnyxeYH5NDDx8 \nMinus One（by South Park Commons） https://youtube.com/watch?v=TmWcsvjJG7E&amp;list=PLmYVYFmFwGm3txxUduawn7i53C5rDjjd7\nGoogle DeepMind: The Podcast https://youtube.com/watch?v=1O27hf17BaY&amp;list=PLqYmG7hTraZBiUr6_Qf8YTS2Oqy3OGZEj \nNo Priors https://youtube.com/watch?v=l8fG5DcjucA&amp;list=PLMKa0PxGwad7jf8hwwX8w5FHitXZ1L_h1 \nAI+a16z https://youtube.com/watch?v=8Je9HzxYfm8&amp;list=PLM4u6XbiXf5rnUvH5NLdV_It2QLgbHBDZ&amp;index=2 \nLatent Space https://youtube.com/@LatentSpacePod \nThe AI Daily Brief https://youtube.com/@AIDailyBrief \nLightcone Podcast（Y Combinator） https://youtube.com/watch?v=ShYKkPPhOoc&amp;list=PLQ-uHSnFig5Ob4XXhgSK26Smb4oRhzFmK \nLex Fridman https://youtube.com/@lexfridman \nDwarkesh Podcast https://youtube.com/watch?v=kWcPg8t1kJ4&amp;list=PLd7-bHaQwnthaNDpZ32TtYONGVk95-fhF\n\n\n大佬在活动 / 大会上演讲的录像 \n\n\nYC Startup School https://youtube.com/watch?v=BJjsfNO5JTo&amp;list=PLQ-uHSnFig5M9fW16o2l35jrfdsxGknNB \nAI Engineers World Fair https://youtube.com/watch?v=U-fMsbY-kHY \nSequoia AI Ascent https://youtube.com/watch?v=v9JBMnxuPX8&amp;list=PLOhHNjZItNnMEqGLRWkKjaMcdSJptkR08 \nStripe Sessions https://youtube.com/watch?v=ONIexChUpuw&amp;list=PLcoWp8pBTM3CYTQho8i-a_lzx4cq7-ePh \nFigma Config https://youtube.com/watch?v=5q8YAUTYAyk&amp;list=PLXDU_eVOJTx6rKQR1JEIktXodeHUawC_T\n\n\nOpenAI / Anthropic 的官方频道 https://youtube.com/@OpenAI https://youtube.com/@anthropic-ai\n手把手教你用 AI 工具的干货教程 \n\n\nRiley Brown https://youtube.com/@rileybrownai \nGreg Isenberg https://youtube.com/@GregIsenberg \nRas Mic https://youtube.com/@rasmic \nMckay Wrigley https://youtube.com/@realmckaywrigley\n\n\nAndrej Karpathy https://youtube.com/@AndrejKarpathy\n\n  \n\n"}]